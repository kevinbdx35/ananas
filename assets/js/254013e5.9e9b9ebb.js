"use strict";(self.webpackChunkcoursess=self.webpackChunkcoursess||[]).push([[9402],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(t),m=i,h=d["".concat(s,".").concat(m)]||d[m]||c[m]||a;return t?r.createElement(h,o(o({ref:n},p),{},{components:t})):r.createElement(h,o({ref:n},p))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var u=2;u<a;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1543:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var r=t(7462),i=t(3366),a=(t(7294),t(3905)),o=["components"],l={sidebar_position:1},s="Python \ud83d\udc0d",u={unversionedId:"python/python",id:"python/python",title:"Python \ud83d\udc0d",description:"Python est un langage de programmation polyvalent, simple \xe0 apprendre et tr\xe8s puissant. Il est parfait pour d\xe9buter la programmation tout en \xe9tant utilis\xe9 par les plus grandes entreprises technologiques du monde.",source:"@site/docs/python/python.md",sourceDirName:"python",slug:"/python/",permalink:"/ananas/docs/python/",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/python/python.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Flutter Pr\xe9requis",permalink:"/ananas/docs/flutter/flutter-prerequis"},next:{title:"Bibliographies et sources",permalink:"/ananas/docs/bibliographie"}},p=[{value:"\ud83c\udfaf Pourquoi apprendre Python ?",id:"-pourquoi-apprendre-python-",children:[{value:"Simplicit\xe9 et lisibilit\xe9",id:"simplicit\xe9-et-lisibilit\xe9",children:[],level:3},{value:"Polyvalence exceptionnelle",id:"polyvalence-exceptionnelle",children:[],level:3},{value:"\xc9cosyst\xe8me riche",id:"\xe9cosyst\xe8me-riche",children:[],level:3}],level:2},{value:"\ud83d\ude80 Installation et configuration",id:"-installation-et-configuration",children:[{value:"Installation de Python",id:"installation-de-python",children:[{value:"Sur Windows \ud83e\ude9f",id:"sur-windows-",children:[],level:4},{value:"Sur macOS \ud83c\udf4e",id:"sur-macos-",children:[],level:4},{value:"Sur Linux \ud83d\udc27",id:"sur-linux-",children:[],level:4}],level:3},{value:"V\xe9rification de l&#39;installation",id:"v\xe9rification-de-linstallation",children:[],level:3}],level:2},{value:"\ud83c\udf93 Les bases de Python",id:"-les-bases-de-python",children:[{value:"Variables et types de donn\xe9es",id:"variables-et-types-de-donn\xe9es",children:[],level:3},{value:"Op\xe9rations de base",id:"op\xe9rations-de-base",children:[],level:3},{value:"Structures de contr\xf4le",id:"structures-de-contr\xf4le",children:[{value:"Conditions",id:"conditions",children:[],level:4},{value:"Boucles",id:"boucles",children:[],level:4}],level:3},{value:"Fonctions",id:"fonctions",children:[],level:3}],level:2},{value:"\ud83d\udcda Structures de donn\xe9es essentielles",id:"-structures-de-donn\xe9es-essentielles",children:[{value:"Listes",id:"listes",children:[],level:3},{value:"Dictionnaires",id:"dictionnaires",children:[],level:3}],level:2},{value:"\ud83d\udee0\ufe0f Gestion des erreurs",id:"\ufe0f-gestion-des-erreurs",children:[],level:2},{value:"\ud83d\udcc1 Travail avec les fichiers",id:"-travail-avec-les-fichiers",children:[],level:2},{value:"\ud83c\udfaf Exercices pratiques",id:"-exercices-pratiques",children:[{value:"Exercice 1 : Calculatrice simple",id:"exercice-1--calculatrice-simple",children:[],level:3},{value:"Exercice 2 : Gestionnaire de t\xe2ches",id:"exercice-2--gestionnaire-de-t\xe2ches",children:[],level:3},{value:"Exercice 3 : Analyseur de texte",id:"exercice-3--analyseur-de-texte",children:[],level:3}],level:2},{value:"\ud83c\udf1f Bonnes pratiques",id:"-bonnes-pratiques",children:[{value:"Convention de nommage (PEP 8)",id:"convention-de-nommage-pep-8",children:[],level:3},{value:"Documentation du code",id:"documentation-du-code",children:[],level:3}],level:2},{value:"\ud83d\udce6 Packages essentiels \xe0 conna\xeetre",id:"-packages-essentiels-\xe0-conna\xeetre",children:[{value:"Pour d\xe9buter",id:"pour-d\xe9buter",children:[],level:3},{value:"Exemples d&#39;utilisation",id:"exemples-dutilisation",children:[],level:3}],level:2},{value:"\ud83c\udfaf D\xe9fis pour progresser",id:"-d\xe9fis-pour-progresser",children:[{value:"D\xe9fi 1 : Deviner le nombre",id:"d\xe9fi-1--deviner-le-nombre",children:[],level:3},{value:"D\xe9fi 2 : Convertisseur d&#39;unit\xe9s",id:"d\xe9fi-2--convertisseur-dunit\xe9s",children:[],level:3},{value:"D\xe9fi 3 : G\xe9n\xe9rateur de mots de passe",id:"d\xe9fi-3--g\xe9n\xe9rateur-de-mots-de-passe",children:[],level:3},{value:"D\xe9fi 4 : Mini-jeu du pendu",id:"d\xe9fi-4--mini-jeu-du-pendu",children:[],level:3}],level:2},{value:"\ud83d\ude80 Pour aller plus loin",id:"-pour-aller-plus-loin",children:[{value:"Programmation orient\xe9e objet",id:"programmation-orient\xe9e-objet",children:[],level:3},{value:"Ressources pour continuer",id:"ressources-pour-continuer",children:[],level:3}],level:2},{value:"\ud83d\udd17 Liens utiles",id:"-liens-utiles",children:[],level:2}],c={toc:p};function d(e){var n=e.components,t=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"python-"},"Python \ud83d\udc0d"),(0,a.kt)("p",null,"Python est un langage de programmation polyvalent, simple \xe0 apprendre et tr\xe8s puissant. Il est parfait pour d\xe9buter la programmation tout en \xe9tant utilis\xe9 par les plus grandes entreprises technologiques du monde."),(0,a.kt)("h2",{id:"-pourquoi-apprendre-python-"},"\ud83c\udfaf Pourquoi apprendre Python ?"),(0,a.kt)("h3",{id:"simplicit\xe9-et-lisibilit\xe9"},"Simplicit\xe9 et lisibilit\xe9"),(0,a.kt)("p",null,"Python privil\xe9gie la ",(0,a.kt)("strong",{parentName:"p"},"lisibilit\xe9")," du code. Sa syntaxe claire et intuitive permet de se concentrer sur la logique plut\xf4t que sur les d\xe9tails techniques complexes."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Python vs autres langages - comparaison "Hello World"\n\n# Python (3 caract\xe8res de ponctuation)\nprint("Hello World!")\n\n# Java (47 caract\xe8res de ponctuation)\npublic class HelloWorld {\n    public static void main(String[] args) {\n        System.out.println("Hello World!");\n    }\n}\n')),(0,a.kt)("h3",{id:"polyvalence-exceptionnelle"},"Polyvalence exceptionnelle"),(0,a.kt)("p",null,"Python est utilis\xe9 dans de nombreux domaines :"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\ud83c\udf10 ",(0,a.kt)("strong",{parentName:"li"},"D\xe9veloppement web")," (Django, Flask, FastAPI)"),(0,a.kt)("li",{parentName:"ul"},"\ud83e\udd16 ",(0,a.kt)("strong",{parentName:"li"},"Intelligence artificielle")," et Machine Learning (TensorFlow, PyTorch)"),(0,a.kt)("li",{parentName:"ul"},"\ud83d\udcca ",(0,a.kt)("strong",{parentName:"li"},"Analyse de donn\xe9es")," (Pandas, NumPy, Matplotlib)"),(0,a.kt)("li",{parentName:"ul"},"\ud83d\udd2c ",(0,a.kt)("strong",{parentName:"li"},"Sciences et recherche")," (SciPy, Jupyter)"),(0,a.kt)("li",{parentName:"ul"},"\ud83c\udfae ",(0,a.kt)("strong",{parentName:"li"},"D\xe9veloppement de jeux")," (Pygame)"),(0,a.kt)("li",{parentName:"ul"},"\ud83d\udee0\ufe0f ",(0,a.kt)("strong",{parentName:"li"},"Automatisation")," et scripts"),(0,a.kt)("li",{parentName:"ul"},"\ud83d\udcf1 ",(0,a.kt)("strong",{parentName:"li"},"Applications desktop")," (Tkinter, PyQt)")),(0,a.kt)("h3",{id:"\xe9cosyst\xe8me-riche"},"\xc9cosyst\xe8me riche"),(0,a.kt)("p",null,"Avec plus de ",(0,a.kt)("strong",{parentName:"p"},"400 000 packages")," disponibles sur PyPI (Python Package Index), Python dispose d'une biblioth\xe8que pour pratiquement tout ce que tu veux faire."),(0,a.kt)("h2",{id:"-installation-et-configuration"},"\ud83d\ude80 Installation et configuration"),(0,a.kt)("h3",{id:"installation-de-python"},"Installation de Python"),(0,a.kt)("h4",{id:"sur-windows-"},"Sur Windows \ud83e\ude9f"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Va sur ",(0,a.kt)("a",{parentName:"li",href:"https://python.org/downloads/"},"python.org")),(0,a.kt)("li",{parentName:"ol"},"T\xe9l\xe9charge la derni\xe8re version de Python 3"),(0,a.kt)("li",{parentName:"ol"},"Lance l'installateur et ",(0,a.kt)("strong",{parentName:"li"},'coche "Add Python to PATH"')),(0,a.kt)("li",{parentName:"ol"},'Clique sur "Install Now"')),(0,a.kt)("h4",{id:"sur-macos-"},"Sur macOS \ud83c\udf4e"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Avec Homebrew (recommand\xe9)\nbrew install python\n\n# Ou t\xe9l\xe9charge directement depuis python.org\n")),(0,a.kt)("h4",{id:"sur-linux-"},"Sur Linux \ud83d\udc27"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Ubuntu/Debian\nsudo apt update\nsudo apt install python3 python3-pip\n\n# CentOS/RHEL\nsudo yum install python3 python3-pip\n\n# Arch Linux\nsudo pacman -S python python-pip\n")),(0,a.kt)("h3",{id:"v\xe9rification-de-linstallation"},"V\xe9rification de l'installation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# V\xe9rifier la version de Python\npython --version\n# ou\npython3 --version\n\n# V\xe9rifier pip (gestionnaire de packages)\npip --version\n# ou\npip3 --version\n")),(0,a.kt)("h2",{id:"-les-bases-de-python"},"\ud83c\udf93 Les bases de Python"),(0,a.kt)("h3",{id:"variables-et-types-de-donn\xe9es"},"Variables et types de donn\xe9es"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Nombres\nage = 25                    # int (entier)\nprix = 19.99               # float (d\xe9cimal)\ncomplexe = 3 + 4j          # complex (nombre complexe)\n\n# Texte\nnom = "Alice"              # str (cha\xeene de caract\xe8res)\nmessage = \'Bonjour!\'       # Les guillemets simples ou doubles fonctionnent\n\n# Bool\xe9ens\nactif = True               # bool (Vrai)\ntermine = False            # bool (Faux)\n\n# Collections\nfruits = ["pomme", "banane", "orange"]    # list (liste)\ncoordonnees = (10, 20)                    # tuple (tuple)\nutilisateur = {"nom": "Bob", "age": 30}   # dict (dictionnaire)\nnombres_uniques = {1, 2, 3, 4, 5}        # set (ensemble)\n')),(0,a.kt)("h3",{id:"op\xe9rations-de-base"},"Op\xe9rations de base"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Op\xe9rations arithm\xe9tiques\naddition = 5 + 3        # 8\nsoustraction = 10 - 4   # 6\nmultiplication = 6 * 7  # 42\ndivision = 15 / 3       # 5.0 (toujours un float)\ndivision_entiere = 15 // 4  # 3 (division enti\xe8re)\nmodulo = 17 % 5         # 2 (reste de la division)\npuissance = 2 ** 3      # 8 (2 puissance 3)\n\n# Op\xe9rations sur les cha\xeenes\nprenom = "Alice"\nnom = "Dupont"\nnom_complet = prenom + " " + nom  # "Alice Dupont"\nrepetition = "Ha" * 3            # "HaHaHa"\n')),(0,a.kt)("h3",{id:"structures-de-contr\xf4le"},"Structures de contr\xf4le"),(0,a.kt)("h4",{id:"conditions"},"Conditions"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'age = 18\n\nif age >= 18:\n    print("Tu es majeur")\nelif age >= 16:\n    print("Tu peux conduire")\nelse:\n    print("Tu es mineur")\n\n# Op\xe9rateurs de comparaison\n# == (\xe9gal), != (diff\xe9rent), < (plus petit), > (plus grand)\n# <= (plus petit ou \xe9gal), >= (plus grand ou \xe9gal)\n\n# Op\xe9rateurs logiques\nif age >= 18 and age < 65:\n    print("En \xe2ge de travailler")\n\nif age < 13 or age > 65:\n    print("Tarif r\xe9duit")\n')),(0,a.kt)("h4",{id:"boucles"},"Boucles"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Boucle for - r\xe9p\xe9ter un nombre d\xe9fini de fois\nfor i in range(5):\n    print(f"Compteur: {i}")\n\n# Boucle sur une liste\nfruits = ["pomme", "banane", "orange"]\nfor fruit in fruits:\n    print(f"J\'aime les {fruit}s")\n\n# Boucle while - r\xe9p\xe9ter tant qu\'une condition est vraie\ncompteur = 0\nwhile compteur < 3:\n    print(f"Tour {compteur}")\n    compteur += 1\n\n# Break et continue\nfor i in range(10):\n    if i == 3:\n        continue  # Passe au tour suivant\n    if i == 7:\n        break     # Sort de la boucle\n    print(i)\n')),(0,a.kt)("h3",{id:"fonctions"},"Fonctions"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# D\xe9finir une fonction\ndef saluer(nom):\n    return f"Bonjour {nom}!"\n\n# Utiliser la fonction\nmessage = saluer("Alice")\nprint(message)  # Bonjour Alice!\n\n# Fonction avec plusieurs param\xe8tres\ndef calculer_aire_rectangle(longueur, largeur):\n    aire = longueur * largeur\n    return aire\n\n# Fonction avec param\xe8tres par d\xe9faut\ndef saluer_personne(nom, titre="M./Mme"):\n    return f"Bonjour {titre} {nom}"\n\nprint(saluer_personne("Dupont"))              # Bonjour M./Mme Dupont\nprint(saluer_personne("Martin", "Dr"))        # Bonjour Dr Martin\n\n# Fonction avec nombre variable de param\xe8tres\ndef additionner(*nombres):\n    total = 0\n    for nombre in nombres:\n        total += nombre\n    return total\n\nprint(additionner(1, 2, 3, 4, 5))  # 15\n')),(0,a.kt)("h2",{id:"-structures-de-donn\xe9es-essentielles"},"\ud83d\udcda Structures de donn\xe9es essentielles"),(0,a.kt)("h3",{id:"listes"},"Listes"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"# Cr\xe9er une liste\nnombres = [1, 2, 3, 4, 5]\nvide = []\n\n# Ajouter des \xe9l\xe9ments\nnombres.append(6)           # Ajoute \xe0 la fin\nnombres.insert(0, 0)        # Ins\xe8re \xe0 l'index 0\n\n# Acc\xe9der aux \xe9l\xe9ments\npremier = nombres[0]        # Premier \xe9l\xe9ment\ndernier = nombres[-1]       # Dernier \xe9l\xe9ment\nsous_liste = nombres[1:4]   # \xc9l\xe9ments de l'index 1 \xe0 3\n\n# Op\xe9rations utiles\ntaille = len(nombres)       # Taille de la liste\nnombres.remove(3)           # Supprime la premi\xe8re occurrence de 3\nelement = nombres.pop()     # Retire et retourne le dernier \xe9l\xe9ment\n\n# Parcourir une liste\nfor i, nombre in enumerate(nombres):\n    print(f\"Index {i}: {nombre}\")\n")),(0,a.kt)("h3",{id:"dictionnaires"},"Dictionnaires"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Cr\xe9er un dictionnaire\npersonne = {\n    "nom": "Dupont",\n    "prenom": "Alice",\n    "age": 25,\n    "ville": "Paris"\n}\n\n# Acc\xe9der aux valeurs\nnom = personne["nom"]           # "Dupont"\nage = personne.get("age", 0)    # 25, ou 0 si la cl\xe9 n\'existe pas\n\n# Modifier/ajouter\npersonne["age"] = 26            # Modifie\npersonne["profession"] = "Dev"  # Ajoute\n\n# Parcourir un dictionnaire\nfor cle, valeur in personne.items():\n    print(f"{cle}: {valeur}")\n\n# Op\xe9rations utiles\ncles = list(personne.keys())       # Liste des cl\xe9s\nvaleurs = list(personne.values())  # Liste des valeurs\n')),(0,a.kt)("h2",{id:"\ufe0f-gestion-des-erreurs"},"\ud83d\udee0\ufe0f Gestion des erreurs"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Try/except pour g\xe9rer les erreurs\ntry:\n    nombre = int(input("Entre un nombre: "))\n    resultat = 10 / nombre\n    print(f"10 / {nombre} = {resultat}")\nexcept ValueError:\n    print("Ce n\'est pas un nombre valide!")\nexcept ZeroDivisionError:\n    print("Impossible de diviser par z\xe9ro!")\nexcept Exception as e:\n    print(f"Une erreur inattendue s\'est produite: {e}")\nfinally:\n    print("Cette ligne s\'ex\xe9cute toujours")\n')),(0,a.kt)("h2",{id:"-travail-avec-les-fichiers"},"\ud83d\udcc1 Travail avec les fichiers"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# \xc9crire dans un fichier\nwith open("mon_fichier.txt", "w") as fichier:\n    fichier.write("Bonjour le monde!\\n")\n    fichier.write("Python est g\xe9nial!")\n\n# Lire un fichier\nwith open("mon_fichier.txt", "r") as fichier:\n    contenu = fichier.read()\n    print(contenu)\n\n# Lire ligne par ligne\nwith open("mon_fichier.txt", "r") as fichier:\n    for ligne in fichier:\n        print(ligne.strip())  # strip() enl\xe8ve les retours \xe0 la ligne\n\n# G\xe9rer les erreurs de fichier\ntry:\n    with open("fichier_inexistant.txt", "r") as f:\n        contenu = f.read()\nexcept FileNotFoundError:\n    print("Le fichier n\'existe pas!")\n')),(0,a.kt)("h2",{id:"-exercices-pratiques"},"\ud83c\udfaf Exercices pratiques"),(0,a.kt)("h3",{id:"exercice-1--calculatrice-simple"},"Exercice 1 : Calculatrice simple"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'def calculatrice():\n    """\n    Cr\xe9e une calculatrice simple avec les 4 op\xe9rations de base\n    """\n    print("=== CALCULATRICE PYTHON ===")\n    \n    while True:\n        try:\n            num1 = float(input("Premier nombre: "))\n            operation = input("Op\xe9ration (+, -, *, /) ou \'q\' pour quitter: ")\n            \n            if operation == \'q\':\n                break\n                \n            num2 = float(input("Deuxi\xe8me nombre: "))\n            \n            if operation == \'+\':\n                resultat = num1 + num2\n            elif operation == \'-\':\n                resultat = num1 - num2\n            elif operation == \'*\':\n                resultat = num1 * num2\n            elif operation == \'/\':\n                if num2 != 0:\n                    resultat = num1 / num2\n                else:\n                    print("Erreur: Division par z\xe9ro!")\n                    continue\n            else:\n                print("Op\xe9ration non reconnue!")\n                continue\n                \n            print(f"R\xe9sultat: {num1} {operation} {num2} = {resultat}")\n            \n        except ValueError:\n            print("Erreur: Veuillez entrer des nombres valides!")\n\n# calculatrice()  # D\xe9commente pour tester\n')),(0,a.kt)("h3",{id:"exercice-2--gestionnaire-de-t\xe2ches"},"Exercice 2 : Gestionnaire de t\xe2ches"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'def gestionnaire_taches():\n    """\n    Un simple gestionnaire de t\xe2ches en ligne de commande\n    """\n    taches = []\n    \n    while True:\n        print(f"\\n=== GESTIONNAIRE DE T\xc2CHES ({len(taches)} t\xe2ches) ===")\n        print("1. Voir les t\xe2ches")\n        print("2. Ajouter une t\xe2che")\n        print("3. Marquer comme termin\xe9e")\n        print("4. Supprimer une t\xe2che")\n        print("5. Quitter")\n        \n        choix = input("Votre choix: ")\n        \n        if choix == "1":\n            if not taches:\n                print("Aucune t\xe2che pour le moment.")\n            else:\n                for i, tache in enumerate(taches, 1):\n                    statut = "\u2713" if tache["terminee"] else "\u25cb"\n                    print(f"{i}. {statut} {tache[\'description\']}")\n                    \n        elif choix == "2":\n            description = input("Description de la t\xe2che: ")\n            taches.append({"description": description, "terminee": False})\n            print("T\xe2che ajout\xe9e!")\n            \n        elif choix == "3":\n            try:\n                numero = int(input("Num\xe9ro de la t\xe2che \xe0 terminer: ")) - 1\n                if 0 <= numero < len(taches):\n                    taches[numero]["terminee"] = True\n                    print("T\xe2che marqu\xe9e comme termin\xe9e!")\n                else:\n                    print("Num\xe9ro de t\xe2che invalide!")\n            except ValueError:\n                print("Veuillez entrer un num\xe9ro valide!")\n                \n        elif choix == "4":\n            try:\n                numero = int(input("Num\xe9ro de la t\xe2che \xe0 supprimer: ")) - 1\n                if 0 <= numero < len(taches):\n                    tache_supprimee = taches.pop(numero)\n                    print(f"T\xe2che \'{tache_supprimee[\'description\']}\' supprim\xe9e!")\n                else:\n                    print("Num\xe9ro de t\xe2che invalide!")\n            except ValueError:\n                print("Veuillez entrer un num\xe9ro valide!")\n                \n        elif choix == "5":\n            print("Au revoir!")\n            break\n            \n        else:\n            print("Choix invalide!")\n\n# gestionnaire_taches()  # D\xe9commente pour tester\n')),(0,a.kt)("h3",{id:"exercice-3--analyseur-de-texte"},"Exercice 3 : Analyseur de texte"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'def analyser_texte(texte):\n    """\n    Analyse un texte et retourne des statistiques\n    """\n    # Statistiques de base\n    nb_caracteres = len(texte)\n    nb_caracteres_sans_espaces = len(texte.replace(" ", ""))\n    nb_mots = len(texte.split())\n    nb_lignes = len(texte.split("\\n"))\n    \n    # Compter les voyelles\n    voyelles = "aeiouAEIOU"\n    nb_voyelles = sum(1 for char in texte if char in voyelles)\n    \n    # Mots les plus fr\xe9quents\n    mots = texte.lower().split()\n    frequence_mots = {}\n    for mot in mots:\n        # Nettoyer la ponctuation\n        mot_propre = \'\'.join(char for char in mot if char.isalnum())\n        if mot_propre:\n            frequence_mots[mot_propre] = frequence_mots.get(mot_propre, 0) + 1\n    \n    # Trier par fr\xe9quence\n    mots_tries = sorted(frequence_mots.items(), key=lambda x: x[1], reverse=True)\n    \n    print("=== ANALYSE DU TEXTE ===")\n    print(f"Caract\xe8res (total): {nb_caracteres}")\n    print(f"Caract\xe8res (sans espaces): {nb_caracteres_sans_espaces}")\n    print(f"Mots: {nb_mots}")\n    print(f"Lignes: {nb_lignes}")\n    print(f"Voyelles: {nb_voyelles}")\n    print("\\nMots les plus fr\xe9quents:")\n    for mot, freq in mots_tries[:5]:  # Top 5\n        print(f"  {mot}: {freq} fois")\n\n# Exemple d\'utilisation\ntexte_exemple = """\nPython est un langage de programmation interpr\xe9t\xe9, multi-paradigme et \nmultiplateformes. Il favorise la programmation imp\xe9rative structur\xe9e, \nfonctionnelle et orient\xe9e objet. Python est un langage puissant et facile \xe0 apprendre.\n"""\n\n# analyser_texte(texte_exemple)  # D\xe9commente pour tester\n')),(0,a.kt)("h2",{id:"-bonnes-pratiques"},"\ud83c\udf1f Bonnes pratiques"),(0,a.kt)("h3",{id:"convention-de-nommage-pep-8"},"Convention de nommage (PEP 8)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Variables et fonctions : snake_case\nnom_utilisateur = "Alice"\ndef calculer_moyenne(notes):\n    pass\n\n# Constantes : MAJUSCULES\nPI = 3.14159\nCOULEUR_ROUGE = "#FF0000"\n\n# Classes : PascalCase\nclass GestionnaireFichier:\n    pass\n\n# Modules et packages : minuscules\nimport math\nimport mon_module\n')),(0,a.kt)("h3",{id:"documentation-du-code"},"Documentation du code"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'def calculer_imc(poids, taille):\n    """\n    Calcule l\'Indice de Masse Corporelle (IMC)\n    \n    Args:\n        poids (float): Poids en kilogrammes\n        taille (float): Taille en m\xe8tres\n        \n    Returns:\n        float: IMC calcul\xe9\n        \n    Raises:\n        ValueError: Si le poids ou la taille sont n\xe9gatifs ou nuls\n    """\n    if poids <= 0 or taille <= 0:\n        raise ValueError("Le poids et la taille doivent \xeatre positifs")\n    \n    return poids / (taille ** 2)\n')),(0,a.kt)("h2",{id:"-packages-essentiels-\xe0-conna\xeetre"},"\ud83d\udce6 Packages essentiels \xe0 conna\xeetre"),(0,a.kt)("h3",{id:"pour-d\xe9buter"},"Pour d\xe9buter"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Installer un package avec pip\npip install requests numpy pandas matplotlib\n\n# Cr\xe9er un fichier requirements.txt\npip freeze > requirements.txt\n\n# Installer depuis requirements.txt\npip install -r requirements.txt\n")),(0,a.kt)("h3",{id:"exemples-dutilisation"},"Exemples d'utilisation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Requests - pour les requ\xeates HTTP\nimport requests\n\nresponse = requests.get("https://api.github.com/users/octocat")\ndata = response.json()\nprint(data["name"])\n\n# NumPy - pour les calculs num\xe9riques\nimport numpy as np\n\ntableau = np.array([1, 2, 3, 4, 5])\nmoyenne = np.mean(tableau)\nprint(f"Moyenne: {moyenne}")\n\n# Pandas - pour l\'analyse de donn\xe9es\nimport pandas as pd\n\n# Cr\xe9er un DataFrame\ndata = {\n    "nom": ["Alice", "Bob", "Charlie"],\n    "age": [25, 30, 35],\n    "ville": ["Paris", "Lyon", "Marseille"]\n}\ndf = pd.DataFrame(data)\nprint(df)\n')),(0,a.kt)("h2",{id:"-d\xe9fis-pour-progresser"},"\ud83c\udfaf D\xe9fis pour progresser"),(0,a.kt)("h3",{id:"d\xe9fi-1--deviner-le-nombre"},"D\xe9fi 1 : Deviner le nombre"),(0,a.kt)("p",null,"Cr\xe9e un jeu o\xf9 l'ordinateur choisit un nombre al\xe9atoire et l'utilisateur doit le deviner."),(0,a.kt)("h3",{id:"d\xe9fi-2--convertisseur-dunit\xe9s"},"D\xe9fi 2 : Convertisseur d'unit\xe9s"),(0,a.kt)("p",null,"Cr\xe9e un programme qui convertit entre diff\xe9rentes unit\xe9s (temp\xe9rature, distance, poids)."),(0,a.kt)("h3",{id:"d\xe9fi-3--g\xe9n\xe9rateur-de-mots-de-passe"},"D\xe9fi 3 : G\xe9n\xe9rateur de mots de passe"),(0,a.kt)("p",null,"Cr\xe9e un g\xe9n\xe9rateur de mots de passe s\xe9curis\xe9s avec options de personnalisation."),(0,a.kt)("h3",{id:"d\xe9fi-4--mini-jeu-du-pendu"},"D\xe9fi 4 : Mini-jeu du pendu"),(0,a.kt)("p",null,"Impl\xe9mente le jeu du pendu avec une liste de mots pr\xe9d\xe9finis."),(0,a.kt)("h2",{id:"-pour-aller-plus-loin"},"\ud83d\ude80 Pour aller plus loin"),(0,a.kt)("h3",{id:"programmation-orient\xe9e-objet"},"Programmation orient\xe9e objet"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'class Voiture:\n    def __init__(self, marque, modele, annee):\n        self.marque = marque\n        self.modele = modele\n        self.annee = annee\n        self.vitesse = 0\n    \n    def accelerer(self, increment=10):\n        self.vitesse += increment\n        print(f"Vitesse: {self.vitesse} km/h")\n    \n    def freiner(self, decrement=10):\n        self.vitesse = max(0, self.vitesse - decrement)\n        print(f"Vitesse: {self.vitesse} km/h")\n    \n    def __str__(self):\n        return f"{self.marque} {self.modele} ({self.annee})"\n\n# Utilisation\nma_voiture = Voiture("Toyota", "Prius", 2022)\nprint(ma_voiture)\nma_voiture.accelerer(20)\nma_voiture.freiner(5)\n')),(0,a.kt)("h3",{id:"ressources-pour-continuer"},"Ressources pour continuer"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\ud83d\udcd6 ",(0,a.kt)("strong",{parentName:"li"},"Documentation officielle")," : ",(0,a.kt)("a",{parentName:"li",href:"https://docs.python.org"},"docs.python.org")),(0,a.kt)("li",{parentName:"ul"},"\ud83c\udf93 ",(0,a.kt)("strong",{parentName:"li"},"Tutoriels interactifs")," : ",(0,a.kt)("a",{parentName:"li",href:"https://codecademy.com"},"codecademy.com/python")),(0,a.kt)("li",{parentName:"ul"},"\ud83c\udfc6 ",(0,a.kt)("strong",{parentName:"li"},"D\xe9fis de code")," : ",(0,a.kt)("a",{parentName:"li",href:"https://codewars.com"},"codewars.com"),", ",(0,a.kt)("a",{parentName:"li",href:"https://leetcode.com"},"leetcode.com")),(0,a.kt)("li",{parentName:"ul"},"\ud83d\udcda ",(0,a.kt)("strong",{parentName:"li"},"Livres recommand\xe9s"),' : "Automate the Boring Stuff with Python", "Python Crash Course"'),(0,a.kt)("li",{parentName:"ul"},"\ud83c\udfa5 ",(0,a.kt)("strong",{parentName:"li"},"Cha\xeenes YouTube")," : Corey Schafer, Real Python, Programming with Mosh")),(0,a.kt)("hr",null),(0,a.kt)("div",{className:"admonition admonition-success alert alert--success"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"F\xe9licitations ! \ud83c\udf89")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Tu as maintenant une base solide en Python. La cl\xe9 du succ\xe8s est la ",(0,a.kt)("strong",{parentName:"p"},"pratique r\xe9guli\xe8re"),". Commence par des petits projets et augmente progressivement la complexit\xe9. Python est un langage qui r\xe9compense la curiosit\xe9 et l'exp\xe9rimentation !"))),(0,a.kt)("h2",{id:"-liens-utiles"},"\ud83d\udd17 Liens utiles"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://python.org"},"Python.org")," - Site officiel"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://pypi.org"},"PyPI")," - Repository de packages Python"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://realpython.com"},"Real Python")," - Tutoriels avanc\xe9s"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://pypi.org"},"Python Package Index")," - Packages Python"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/topics/python"},"GitHub")," - Projets Python open source")))}d.isMDXComponent=!0}}]);