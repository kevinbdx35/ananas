"use strict";(self.webpackChunkcoursess=self.webpackChunkcoursess||[]).push([[4937],{3905:function(e,n,t){t.d(n,{Zo:function(){return o},kt:function(){return m}});var a=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var d=a.createContext({}),u=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},o=function(e){var n=u(e.components);return a.createElement(d.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,s=e.originalType,d=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),c=u(t),m=l,h=c["".concat(d,".").concat(m)]||c[m]||p[m]||s;return t?a.createElement(h,r(r({ref:n},o),{},{components:t})):a.createElement(h,r({ref:n},o))}));function m(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var s=t.length,r=new Array(s);r[0]=c;var i={};for(var d in n)hasOwnProperty.call(n,d)&&(i[d]=n[d]);i.originalType=e,i.mdxType="string"==typeof e?e:l,r[1]=i;for(var u=2;u<s;u++)r[u]=t[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},9393:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return d},metadata:function(){return u},toc:function(){return o},default:function(){return c}});var a=t(7462),l=t(3366),s=(t(7294),t(3905)),r=["components"],i={sidebar_position:8},d="La librairie D3",u={unversionedId:"front-end/d3",id:"front-end/d3",title:"La librairie D3",description:"Visusalisation des donn\xe9es avec la librairie D3",source:"@site/docs/front-end/d3.md",sourceDirName:"front-end",slug:"/front-end/d3",permalink:"/ananas/docs/front-end/d3",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/front-end/d3.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"SVG",permalink:"/ananas/docs/front-end/svg"},next:{title:"La Th\xe9orie des Couleurs \ud83c\udfa8",permalink:"/ananas/docs/tutorial-design/couleurs"}},o=[{value:"Visusalisation des donn\xe9es avec la librairie D3",id:"visusalisation-des-donn\xe9es-avec-la-librairie-d3",children:[],level:2},{value:"Installation",id:"installation",children:[],level:2},{value:"Select et SelectAll",id:"select-et-selectall",children:[],level:2},{value:"Append",id:"append",children:[],level:2},{value:"La m\xe9thode attr",id:"la-m\xe9thode-attr",children:[{value:"Encha\xeener les m\xe9thodes",id:"encha\xeener-les-m\xe9thodes",children:[],level:3}],level:2},{value:"La m\xe9thode text",id:"la-m\xe9thode-text",children:[],level:2},{value:"Les groupes de SVG",id:"les-groupes-de-svg",children:[],level:2},{value:"Manipulation de nos premi\xe8res donn\xe9es",id:"manipulation-de-nos-premi\xe8res-donn\xe9es",children:[],level:2},{value:"Ajouter un style en ligne aux \xe9l\xe9ments",id:"ajouter-un-style-en-ligne-aux-\xe9l\xe9ments",children:[],level:2},{value:"Modifier les styles en fonction des donn\xe9es",id:"modifier-les-styles-en-fonction-des-donn\xe9es",children:[],level:2},{value:"Ajouter des classes avec D3",id:"ajouter-des-classes-avec-d3",children:[],level:2},{value:"Mettre \xe0 jour dynamiquement la hauteur d&#39;un \xe9l\xe9ment",id:"mettre-\xe0-jour-dynamiquement-la-hauteur-dun-\xe9l\xe9ment",children:[],level:2},{value:"Modifier la pr\xe9sentation d&#39;un graphique \xe0 barres",id:"modifier-la-pr\xe9sentation-dun-graphique-\xe0-barres",children:[],level:2},{value:"En savoir plus sur SVG dans D3",id:"en-savoir-plus-sur-svg-dans-d3",children:[],level:2},{value:"Afficher les formes avec SVG",id:"afficher-les-formes-avec-svg",children:[],level:2},{value:"Modifier dynamiquement la hauteur de chaque barre",id:"modifier-dynamiquement-la-hauteur-de-chaque-barre",children:[],level:2},{value:"Inverser les \xe9l\xe9ments SVG",id:"inverser-les-\xe9l\xe9ments-svg",children:[],level:2},{value:"Changer la couleur d&#39;un \xe9l\xe9ment SVG",id:"changer-la-couleur-dun-\xe9l\xe9ment-svg",children:[],level:2},{value:"Ajouter des \xe9tiquettes aux \xe9l\xe9ments D3",id:"ajouter-des-\xe9tiquettes-aux-\xe9l\xe9ments-d3",children:[],level:2},{value:"\xc9tiquettes de style D3",id:"\xe9tiquettes-de-style-d3",children:[],level:2},{value:"Ajouter un effet de survol",id:"ajouter-un-effet-de-survol",children:[],level:2},{value:"Cr\xe9er un nuage de points avec des cercles SVG",id:"cr\xe9er-un-nuage-de-points-avec-des-cercles-svg",children:[],level:2},{value:"Ajouter des \xe9tiquettes aux cercles de nuage de points",id:"ajouter-des-\xe9tiquettes-aux-cercles-de-nuage-de-points",children:[],level:2},{value:"Les \xe9chelles",id:"les-\xe9chelles",children:[{value:"Cr\xe9er une \xe9chelle lin\xe9aire",id:"cr\xe9er-une-\xe9chelle-lin\xe9aire",children:[],level:3},{value:"D\xe9finir un domaine et une plage sur une \xe9chelle",id:"d\xe9finir-un-domaine-et-une-plage-sur-une-\xe9chelle",children:[],level:3},{value:"Utilises les fonctions d3.max et d3.min pour rechercher des valeurs minimales et maximales dans un ensemble de donn\xe9es",id:"utilises-les-fonctions-d3max-et-d3min-pour-rechercher-des-valeurs-minimales-et-maximales-dans-un-ensemble-de-donn\xe9es",children:[],level:3},{value:"Utiliser des \xe9chelles dynamiques",id:"utiliser-des-\xe9chelles-dynamiques",children:[],level:3},{value:"Utiliser une \xe9chelle pr\xe9d\xe9finie pour placer des \xe9l\xe9ments",id:"utiliser-une-\xe9chelle-pr\xe9d\xe9finie-pour-placer-des-\xe9l\xe9ments",children:[],level:3}],level:2},{value:"Ajouter des axes \xe0 une visualisation",id:"ajouter-des-axes-\xe0-une-visualisation",children:[],level:2}],p={toc:o};function c(e){var n=e.components,t=(0,l.Z)(e,r);return(0,s.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"la-librairie-d3"},"La librairie D3"),(0,s.kt)("h2",{id:"visusalisation-des-donn\xe9es-avec-la-librairie-d3"},"Visusalisation des donn\xe9es avec la librairie D3"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://d3js.org"},(0,s.kt)("strong",{parentName:"a"},"D3.js")))),(0,s.kt)("p",null,"D3, ou D3.js, signifie ",(0,s.kt)("strong",{parentName:"p"},"Data Driven Documents"),", c'est une librairie Javascript permettant de cr\xe9er des visualisation de donn\xe9es dynamiques et interactives dans ton navigateur.\nElle est tr\xe8s populaire, robuste et avec de nombreuses fonctionnalit\xe9s. Apprendre \xe0 l'utiliser sera un r\xe9el plus sur ton cv."),(0,s.kt)("p",null,"D3 est con\xe7u pour fonctionner avec les normes Web courantes, \xe0 savoir HTML, CSS et Scalable Vector Graphics (SVG)."),(0,s.kt)("p",null,"D3 prend en charge de nombreux types de formats de donn\xe9es d'entr\xe9e. Ensuite, \xe0 l'aide de ses puissantes m\xe9thodes int\xe9gr\xe9es, tu peux transformer ces donn\xe9es en diff\xe9rents tableaux, graphiques et cartes."),(0,s.kt)("p",null,"La visualisation des donn\xe9es est une repr\xe9sentation graphique et logique de donn\xe9es afin que ces derni\xe8res puissent \xeatre mise en valeur et les rendre plus parlantes qu'uniquement des chiffres qui sont plus difficiles \xe0 interpr\xeater quand la quantit\xe9 est \xe9norme."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"http://www.brandlovescore.com/blackfriday2017/#bf"},"Exemple de visualisation de donn\xe9es avec D3.js"))),(0,s.kt)("h2",{id:"installation"},"Installation"),(0,s.kt)("p",null,"Il existe plusieurs mani\xe8re de mettre en oeuvre cette librairie. Ici, tu vas utiliser le CDN. Si tu souhaites utiliser une autre mnani\xe8re tu peux aller lire la documentation ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/d3/d3/blob/main/README.md#installing"},(0,s.kt)("strong",{parentName:"a"},"Installation"))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-html",metastring:"{9,11}","{9,11}":!0},'<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta http-equiv="X-UA-Compatible" content="IE=edge">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>D3.js Project</title>\n\n    <script src="https://cdn.jsdelivr.net/npm/d3@7" defer><\/script>\n\n    <script src="main.js" defer><\/script>\n\n</head>\n<body>\n    <div class = "box"></div>\n</body>\n</html>\n')),(0,s.kt)("p",null,"Tu impl\xe9mentes les balises scripts pour appeler le ",(0,s.kt)("inlineCode",{parentName:"p"},"CDN")," et la page de ton code javascript ",(0,s.kt)("inlineCode",{parentName:"p"},"main.js")," dans le ",(0,s.kt)("inlineCode",{parentName:"p"},"head")," de ton HTML en ajoutant l'attribut ",(0,s.kt)("inlineCode",{parentName:"p"},"defer")," qui permet d'indiquer au navigateur de ne pas attendre le script pour charger le reste du DOM."),(0,s.kt)("p",null,"C'est la meilleure mani\xe8re et la plus rapide de faire appelle \xe0 du script."),(0,s.kt)("p",null,"Tu as aussi mis une ",(0,s.kt)("inlineCode",{parentName:"p"},"div")," avec une ",(0,s.kt)("inlineCode",{parentName:"p"},"class"),"."),(0,s.kt)("h2",{id:"select-et-selectall"},"Select et SelectAll"),(0,s.kt)("p",null,"D3 dispose de plusieurs m\xe9thodes qui te permettent d'ajouter et de modifier des \xe9l\xe9ments dans ton document."),(0,s.kt)("p",null,"La m\xe9thode ",(0,s.kt)("inlineCode",{parentName:"p"},"select()")," s\xe9lectionne un \xe9l\xe9ment du document. Il prend un argument pour le nom de l'\xe9l\xe9ment souhait\xe9 et renvoie un n\u0153ud HTML pour le premier \xe9l\xe9ment du document qui correspond au nom."),(0,s.kt)("p",null,"Tu vas maintenant essentiellement travailler dans ta page javascript ",(0,s.kt)("inlineCode",{parentName:"p"},"main.js"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js true",metastring:'title="ici, tu selectionnes uniquement l\'\xe9l\xe9ment ayant la class .box"',title:'"ici,',tu:!0,selectionnes:!0,uniquement:!0,"l'\xe9l\xe9ment":!0,ayant:!0,la:!0,'.box"':!0},"const box = d3.select(`.box`);\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="ici, tu selectionnes tous les \xe9l\xe9ments div"',title:'"ici,',tu:!0,selectionnes:!0,tous:!0,les:!0,"\xe9l\xe9ments":!0,'div"':!0},'const div = d3.selectAll("div");\n')),(0,s.kt)("h2",{id:"append"},"Append"),(0,s.kt)("p",null,"La m\xe9thode ",(0,s.kt)("inlineCode",{parentName:"p"},"append()")," prend un argument pour l'\xe9l\xe9ment que vous souhaitez ajouter au document. Il ajoute un n\u0153ud HTML \xe0 un \xe9l\xe9ment s\xe9lectionn\xe9 et renvoie un descripteur \xe0 ce n\u0153ud."),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"append")," te permet d'ajouter des \xe9l\xe9ments. Ici, tu d\xe9clares trois \xe9l\xe9ments, un rectangle, une ligne et un cercle."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:"{5-7}","{5-7}":!0},"const box = d3.select(`.box`);\n\nconst svg = box.append('svg');\n\nsvg.append('rect');\nsvg.append('line');\nsvg.append('circle');\n")),(0,s.kt)("h2",{id:"la-m\xe9thode-attr"},"La m\xe9thode attr"),(0,s.kt)("p",null,"C'est la m\xe9thode attribut ",(0,s.kt)("inlineCode",{parentName:"p"},"attr"),", qui permet d'ajouter des attributs par exemple \xe0 tes svg."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'{5-6} title="Tu cr\xe9es en ajout les attributs height et width ton envinonnement de travail"',"{5-6}":!0,title:'"Tu',"cr\xe9es":!0,en:!0,ajout:!0,les:!0,attributs:!0,height:!0,et:!0,width:!0,ton:!0,envinonnement:!0,de:!0,'travail"':!0},"const box = d3.select(`.box`);\n\nconst svg = box.append('svg');\n\nsvg.attr('height', 500);\nsvg.attr('width', 500);\n\nsvg.append('rect');\nsvg.append('line');\nsvg.append('circle');\n")),(0,s.kt)("h3",{id:"encha\xeener-les-m\xe9thodes"},"Encha\xeener les m\xe9thodes"),(0,s.kt)("p",null,"Pour gagner de la place et des lignes, tu peux encha\xeener les m\xe9thodes comme dans l'exemple suivant."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:"{3}","{3}":!0},"const box = d3.select(`.box`);\n\nconst svg = box.append('svg').attr('height', 500).attr('width', 500);\n\nsvg.append('rect');\nsvg.append('line');\nsvg.append('circle');\n")),(0,s.kt)("p",null,"Une meilleure mani\xe8re d'\xe9crire la m\xeame chose pour que \xe7a soit plus lisible."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:"{3-5}","{3-5}":!0},"const box = d3.select(`.box`);\n\nconst svg = box.append('svg')\n    .attr('height', 500)\n    .attr('width', 500);\n\nsvg.append('rect');\nsvg.append('line');\nsvg.append('circle');\n")),(0,s.kt)("p",null,"Maintenant, tu vas ajouter des attributs \xe0 tes \xe9l\xe9ments svg."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:"{7-12,14-19,21-25}","{7-12,14-19,21-25}":!0},"const box = d3.select(`.box`);\n\nconst svg = box.append('svg')\n    .attr('height', 500)\n    .attr('width', 500);\n\nsvg.append('rect')\n    .attr('height', 75)\n    .attr('width', 100)\n    .attr('fill', 'blue')\n    .attr('x', 100)\n    .attr('y', 100);\n\nsvg.append('line');\n    .attr('x1', 50)\n    .attr('y1', 200)\n    .attr('x2', 150)\n    .attr('y2', 250)\n    .attr('stroke', 'green');\n\nsvg.append('circle');\n    .attr('r', 75)\n    .attr('cx', 100)\n    .attr('cy', 150)\n    .attr('fill', 'orange');\n")),(0,s.kt)("h2",{id:"la-m\xe9thode-text"},"La m\xe9thode text"),(0,s.kt)("p",null,"La m\xe9thode text() d\xe9finit le texte du n\u0153ud s\xe9lectionn\xe9 ou obtient le texte actuel. Pour d\xe9finir la valeur, tu passes une cha\xeene comme argument entre les parenth\xe8ses de la m\xe9thode."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'d3.select("ul")\n  .append("li")\n  .text("Very important item");\n')),(0,s.kt)("h2",{id:"les-groupes-de-svg"},"Les groupes de SVG"),(0,s.kt)("p",null,"Tu vas voir qu'il est int\xe9ressant de faire des groupes de svg."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:"{7,9,16,23}","{7,9,16,23}":!0},"const box = d3.select(`.box`);\n\nconst svg = box.append('svg')\n    .attr('height', 500)\n    .attr('width', 500);\n\nconst groupe = svg.append('g');    \n\ngroupe.append('rect')\n    .attr('height', 75)\n    .attr('width', 100)\n    .attr('fill', 'blue')\n    .attr('x', 100)\n    .attr('y', 100);\n\ngroupe.append('line');\n    .attr('x1', 50)\n    .attr('y1', 200)\n    .attr('x2', 150)\n    .attr('y2', 250)\n    .attr('stroke', 'green');\n\ngroupe.append('circle');\n    .attr('r', 75)\n    .attr('cx', 100)\n    .attr('cy', 150)\n    .attr('fill', 'orange');\n")),(0,s.kt)("p",null,"C'est tr\xe8s pratique, car tu peux ainsi ajouter des attributs \xe0 l'ensemble des formes dessin\xe9es en ",(0,s.kt)("inlineCode",{parentName:"p"},"svg")," en les ajoutant directement au groupe.\nDans l'exemple suivant, tu vas d\xe9placer ainsi tous tes \xe9l\xe9ments en une ligne."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:"{8}","{8}":!0},"const box = d3.select(`.box`);\n\nconst svg = box.append('svg')\n    .attr('height', 500)\n    .attr('width', 500);\n\nconst groupe = svg.append('g')\n    .attr('transform', 'translate(0, 100');\n\ngroupe.append('rect')\n    .attr('height', 75)\n    .attr('width', 100)\n    .attr('fill', 'blue')\n    .attr('x', 100)\n    .attr('y', 100);\n\ngroupe.append('line');\n    .attr('x1', 50)\n    .attr('y1', 200)\n    .attr('x2', 150)\n    .attr('y2', 250)\n    .attr('stroke', 'green');\n\ngroupe.append('circle');\n    .attr('r', 75)\n    .attr('cx', 100)\n    .attr('cy', 150)\n    .attr('fill', 'orange');\n")),(0,s.kt)("h2",{id:"manipulation-de-nos-premi\xe8res-donn\xe9es"},"Manipulation de nos premi\xe8res donn\xe9es"),(0,s.kt)("p",null,"La biblioth\xe8que D3 se concentre sur une approche ax\xe9e sur les donn\xe9es. Lorsque tu disposes d'un ensemble de donn\xe9es, tu peux appliquer des m\xe9thodes D3 pour l'afficher sur la page. Les donn\xe9es se pr\xe9sentent sous de nombreux formats."),(0,s.kt)("p",null,"La premi\xe8re \xe9tape consiste \xe0 informer D3 des donn\xe9es. La m\xe9thode ",(0,s.kt)("inlineCode",{parentName:"p"},"data()")," est utilis\xe9e sur une s\xe9lection d'\xe9l\xe9ments DOM pour attacher les donn\xe9es \xe0 ces \xe9l\xe9ments. L'ensemble de donn\xe9es est pass\xe9 en argument \xe0 la m\xe9thode."),(0,s.kt)("p",null,"Un mod\xe8le de workflow courant consiste \xe0 cr\xe9er un nouvel \xe9l\xe9ment dans le document pour chaque donn\xe9e de l'ensemble. D3 a la m\xe9thode ",(0,s.kt)("inlineCode",{parentName:"p"},"enter()")," \xe0 cet effet."),(0,s.kt)("p",null,"Lorsque ",(0,s.kt)("inlineCode",{parentName:"p"},"enter()")," est combin\xe9 avec la m\xe9thode ",(0,s.kt)("inlineCode",{parentName:"p"},"data()"),", il examine les \xe9l\xe9ments s\xe9lectionn\xe9s de la page et les compare au nombre d'\xe9l\xe9ments de donn\xe9es dans l'ensemble. S'il y a moins d'\xe9l\xe9ments que d'\xe9l\xe9ments de donn\xe9es, il cr\xe9e les \xe9l\xe9ments manquants."),(0,s.kt)("p",null,"Voici un exemple qui s\xe9lectionne un \xe9l\xe9ment ul et cr\xe9e un nouvel \xe9l\xe9ment de liste en fonction du nombre d'entr\xe9es dans le tableau\xa0:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-html"},'<body>\n  <ul></ul>\n  <script>\n    const dataset = ["a", "b", "c"];\n    d3.select("ul").selectAll("li")\n      .data(dataset)\n      .enter()\n      .append("li")\n      .text("New item");\n  <\/script>\n</body>\n')),(0,s.kt)("p",null,"Il peut sembler d\xe9routant de s\xe9lectionner des \xe9l\xe9ments qui n'existent pas encore. Ce code indique \xe0 D3 de s\xe9lectionner d'abord l'ul sur la page. Ensuite, s\xe9lectionnez tous les \xe9l\xe9ments de la liste, ce qui renvoie une s\xe9lection vide. Ensuite, la m\xe9thode ",(0,s.kt)("inlineCode",{parentName:"p"},"data()")," examine l'ensemble de donn\xe9es et ex\xe9cute le code suivant trois fois, une fois pour chaque \xe9l\xe9ment du tableau. La m\xe9thode ",(0,s.kt)("inlineCode",{parentName:"p"},"enter()")," voit qu'il n'y a pas d'\xe9l\xe9ments li sur la page, mais il en faut 3 (un pour chaque \xe9l\xe9ment de donn\xe9es dans l'ensemble de donn\xe9es). Les nouveaux \xe9l\xe9ments ",(0,s.kt)("inlineCode",{parentName:"p"},"li")," sont ajout\xe9s \xe0 l'",(0,s.kt)("inlineCode",{parentName:"p"},"ul")," et ont le texte ",(0,s.kt)("inlineCode",{parentName:"p"},"New item"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    d3.select("body").selectAll("h2")\n      .data(dataset)\n      .enter()\n      .append("h2")\n      \n      .text((dataset) => dataset + " USD");\n\n')),(0,s.kt)("h2",{id:"ajouter-un-style-en-ligne-aux-\xe9l\xe9ments"},"Ajouter un style en ligne aux \xe9l\xe9ments"),(0,s.kt)("p",null,"D3 te permet d'ajouter des styles CSS en ligne sur des \xe9l\xe9ments dynamiques avec la m\xe9thode ",(0,s.kt)("inlineCode",{parentName:"p"},"style()"),"."),(0,s.kt)("p",null,"La m\xe9thode ",(0,s.kt)("inlineCode",{parentName:"p"},"style()")," prend une paire cl\xe9-valeur s\xe9par\xe9e par des virgules comme argument. Voici un exemple pour d\xe9finir la couleur du texte de la s\xe9lection sur bleu\xa0:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'selection.style("couleur","bleu");\n')),(0,s.kt)("h2",{id:"modifier-les-styles-en-fonction-des-donn\xe9es"},"Modifier les styles en fonction des donn\xe9es"),(0,s.kt)("p",null,"D3 concerne la visualisation et la pr\xe9sentation des donn\xe9es. Il est probable que tu souhaities modifier le style des \xe9l\xe9ments en fonction des donn\xe9es. tu peux utiliser une fonction de rappel dans la m\xe9thode ",(0,s.kt)("inlineCode",{parentName:"p"},"style()")," pour modifier le style de diff\xe9rents \xe9l\xe9ments."),(0,s.kt)("p",null,"Tu peux souhaiter colorer un point de donn\xe9es en bleu s'il a une valeur inf\xe9rieure \xe0 20, et en rouge dans le cas contraire. tu peux utiliser une fonction de rappel dans la m\xe9thode ",(0,s.kt)("inlineCode",{parentName:"p"},"style()")," et inclure la logique conditionnelle. La fonction de rappel utilise le param\xe8tre ",(0,s.kt)("inlineCode",{parentName:"p"},"d")," pour repr\xe9senter le point de donn\xe9es."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'selection.style("color", (d) => {\n\n});\n')),(0,s.kt)("p",null,"La m\xe9thode ",(0,s.kt)("inlineCode",{parentName:"p"},"style()")," ne se limite pas \xe0 d\xe9finir la couleur - elle peut \xe9galement \xeatre utilis\xe9e avec d'autres propri\xe9t\xe9s CSS."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'   const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    d3.select("body").selectAll("h2")\n      .data(dataset)\n      .enter()\n      .append("h2")\n      .text((d) => (d + " USD"))\n      // Add your code below this line\n      .style("color", (d) => {\n        if(d > 20){\n          return "green";\n        }else{\n          return "red";\n        }\n        });\n')),(0,s.kt)("h2",{id:"ajouter-des-classes-avec-d3"},"Ajouter des classes avec D3"),(0,s.kt)("p",null,"L'utilisation de nombreux styles en ligne sur les \xe9l\xe9ments HTML devient difficile \xe0 g\xe9rer, m\xeame pour les petites applications. Il est plus facile d'ajouter une classe aux \xe9l\xe9ments et de styler cette classe une fois en utilisant les r\xe8gles CSS. D3 a la m\xe9thode ",(0,s.kt)("inlineCode",{parentName:"p"},"attr()")," pour ajouter n'importe quel attribut HTML \xe0 un \xe9l\xe9ment, y compris un nom de classe."),(0,s.kt)("p",null,"La m\xe9thode ",(0,s.kt)("inlineCode",{parentName:"p"},"attr()")," fonctionne de la m\xeame mani\xe8re que ",(0,s.kt)("inlineCode",{parentName:"p"},"style()"),". Il prend des valeurs s\xe9par\xe9es par des virgules et peut utiliser une fonction de rappel. Voici un exemple pour ajouter une classe de conteneur \xe0 une s\xe9lection."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'selection.attr("class", "container");\n')),(0,s.kt)("p",null,"Notes que le param\xe8tre de classe restera le m\xeame chaque fois que tu auras besoin d'ajouter une classe et que seul le param\xe8tre de conteneur changera."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-html",metastring:"{17}","{17}":!0},'<style>\n  .bar {\n    width: 25px;\n    height: 100px;\n    display: inline-block;\n    background-color: blue;\n  }\n</style>\n<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    d3.select("body").selectAll("div")\n      .data(dataset)\n      .enter()\n      .append("div")\n      .attr("class", "bar");\n\n  <\/script>\n</body>\n')),(0,s.kt)("h2",{id:"mettre-\xe0-jour-dynamiquement-la-hauteur-dun-\xe9l\xe9ment"},"Mettre \xe0 jour dynamiquement la hauteur d'un \xe9l\xe9ment"),(0,s.kt)("p",null,"Tu as vu comment afficher les donn\xe9es d'un tableau et comment ajouter des classes CSS. Tu peux combiner ces le\xe7ons pour cr\xe9er un graphique \xe0 barres simple. Il y a deux \xe9tapes pour cela :"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"Cr\xe9er une div pour chaque point de donn\xe9es dans le tableau"),(0,s.kt)("li",{parentName:"ol"},"Donnes \xe0 chaque div une hauteur dynamique, en utilisant une fonction de rappel dans la m\xe9thode ",(0,s.kt)("inlineCode",{parentName:"li"},"style()")," qui d\xe9finit la hauteur \xe9gale \xe0 la valeur des donn\xe9es")),(0,s.kt)("p",null,"Rappele, le format pour d\xe9finir un style \xe0 l'aide d'une fonction de rappel\xa0:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'selection.style("cssProperty", (d) => d)\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-html",metastring:"{18}","{18}":!0},'<style>\n  .bar {\n    width: 25px;\n    height: 100px;\n    display: inline-block;\n    background-color: blue;\n  }\n</style>\n<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    d3.select("body").selectAll("div")\n      .data(dataset)\n      .enter()\n      .append("div")\n      .attr("class", "bar")\n      .style("height", (dataset) => dataset + "px")\n  <\/script>\n</body>\n')),(0,s.kt)("h2",{id:"modifier-la-pr\xe9sentation-dun-graphique-\xe0-barres"},"Modifier la pr\xe9sentation d'un graphique \xe0 barres"),(0,s.kt)("p",null,"Ci-dessus, tu as cr\xe9\xe9 un graphique \xe0 barres, mais quelques modifications de formatage pourraient l'am\xe9liorer\xa0:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"Ajoutes un espace entre chaque barre pour les s\xe9parer visuellement, ce qui se fait en ajoutant une marge au CSS pour la classe de barre."),(0,s.kt)("li",{parentName:"ol"},"Augmentes la hauteur des barres pour mieux montrer la diff\xe9rence de valeurs, ce qui se fait en multipliant la valeur par un nombre pour mettre \xe0 l'\xe9chelle la hauteur.")),(0,s.kt)("h2",{id:"en-savoir-plus-sur-svg-dans-d3"},"En savoir plus sur SVG dans D3"),(0,s.kt)("p",null,"SVG signifie Scalable Vector Graphics."),(0,s.kt)("p",null,"Ici, \"scalable\" signifie que, si tu effectues un zoom avant ou arri\xe8re sur un objet, il n'appara\xeetra pas pixelis\xe9. Il \xe9volue avec le syst\xe8me d'affichage, que ce soit sur un petit \xe9cran mobile ou un grand \xe9cran de t\xe9l\xe9vision."),(0,s.kt)("p",null,"SVG est utilis\xe9 pour cr\xe9er des formes g\xe9om\xe9triques courantes. \xc9tant donn\xe9 que D3 mappe les donn\xe9es dans une repr\xe9sentation visuelle, il utilise SVG pour cr\xe9er les formes de la visualisation. Les formes SVG pour une page Web doivent aller dans une balise SVG HTML."),(0,s.kt)("p",null,"CSS peut \xeatre \xe9volutif lorsque les styles utilisent des unit\xe9s relatives (telles que vh, vw ou des pourcentages), mais l'utilisation de SVG est plus flexible pour cr\xe9er des visualisations de donn\xe9es."),(0,s.kt)("h2",{id:"afficher-les-formes-avec-svg"},"Afficher les formes avec SVG"),(0,s.kt)("p",null,"Tu as cr\xe9\xe9 un \xe9l\xe9ment svg avec une largeur et une hauteur donn\xe9es, qui \xe9tait visible car une couleur d'arri\xe8re-plan lui \xe9tait appliqu\xe9e dans la balise de style. Le code a fait de la place pour la largeur et la hauteur donn\xe9es."),(0,s.kt)("p",null,"L'\xe9tape suivante consiste \xe0 cr\xe9er une forme \xe0 mettre dans la zone svg. Il existe un certain nombre de formes prises en charge dans SVG, telles que les rectangles et les cercles. Ils sont utilis\xe9s pour afficher des donn\xe9es. Par exemple, une forme SVG rectangulaire ",(0,s.kt)("inlineCode",{parentName:"p"},"<rect>")," pourrait cr\xe9er une barre dans un graphique \xe0 barres."),(0,s.kt)("p",null,"Lorsque tu places une forme dans la zone svg, tu peux sp\xe9cifier o\xf9 elle va avec les coordonn\xe9es x et y. Le point d'origine de (0, 0) se trouve dans le coin sup\xe9rieur gauche. Les valeurs positives pour x poussent la forme vers la droite et les valeurs positives pour y poussent la forme vers le bas \xe0 partir du point d'origine."),(0,s.kt)("h2",{id:"modifier-dynamiquement-la-hauteur-de-chaque-barre"},"Modifier dynamiquement la hauteur de chaque barre"),(0,s.kt)("p",null,"La hauteur de chaque barre peut \xeatre d\xe9finie sur la valeur du point de donn\xe9es dans le tableau, de la m\xeame mani\xe8re que la valeur x a \xe9t\xe9 d\xe9finie dynamiquement."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-html",metastring:"{17,21}","{17,21}":!0},'<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    const w = 500;\n    const h = 100;\n\n    const svg = d3.select("body")\n                  .append("svg")\n                  .attr("width", w)\n                  .attr("height", h);\n\n    svg.selectAll("rect")\n       .data(dataset)\n       .enter()\n       .append("rect")\n       .attr("x", (d, i) => i * 30)\n       .attr("y", 0)\n       .attr("width", 25)\n       .attr("height", (d, i) => {\n        return d * 3; \n       });\n  <\/script>\n</body>\n')),(0,s.kt)("h2",{id:"inverser-les-\xe9l\xe9ments-svg"},"Inverser les \xe9l\xe9ments SVG"),(0,s.kt)("p",null,"Tu as peut-\xeatre remarqu\xe9 que le graphique \xe0 barres semblait \xeatre \xe0 l'envers ou invers\xe9. Cela est d\xfb \xe0 la fa\xe7on dont SVG utilise les coordonn\xe9es (x, y)."),(0,s.kt)("p",null,"En SVG, le point d'origine des coordonn\xe9es se trouve dans le coin sup\xe9rieur gauche. Une coordonn\xe9e x de 0 place une forme sur le bord gauche de la zone SVG. Une coordonn\xe9e y de 0 place une forme sur le bord sup\xe9rieur de la zone SVG. Des valeurs x plus \xe9lev\xe9es poussent le rectangle vers la droite. Des valeurs y plus \xe9lev\xe9es poussent le rectangle vers le bas."),(0,s.kt)("p",null,"Pour que les barres soient \xe0 l'endroit, tu dois modifier la fa\xe7on dont la coordonn\xe9e y est calcul\xe9e. Il doit tenir compte \xe0 la fois de la hauteur de la barre et de la hauteur totale de la zone SVG."),(0,s.kt)("p",null,"La hauteur de la zone SVG est de 100. Si tu as un point de donn\xe9es de 0 dans l'ensemble, tu aimerais que la barre commence en bas de la zone SVG (pas en haut). Pour ce faire, la coordonn\xe9e y a besoin d'une valeur de 100. Si la valeur du point de donn\xe9es \xe9tait 1, tu commencerais avec une coordonn\xe9e y de 100 pour placer la barre en bas. Ensuite, tu dois tenir compte de la hauteur de la barre de 1, donc la coordonn\xe9e finale y serait 99."),(0,s.kt)("p",null,"La coordonn\xe9e y qui est ",(0,s.kt)("inlineCode",{parentName:"p"},"y = heightOfSVG - heightOfBar")," placerait les barres \xe0 l'endroit."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-html",metastring:"{19}","{19}":!0},'<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    const w = 500;\n    const h = 100;\n\n    const svg = d3.select("body")\n                  .append("svg")\n                  .attr("width", w)\n                  .attr("height", h);\n\n    svg.selectAll("rect")\n       .data(dataset)\n       .enter()\n       .append("rect")\n       .attr("x", (d, i) => i * 30)\n       .attr("y", (d, i) => {\n        return h - 3 * d\n       })\n       .attr("width", 25)\n       .attr("height", (d, i) => 3 * d);\n  <\/script>\n</body>\n')),(0,s.kt)("h2",{id:"changer-la-couleur-dun-\xe9l\xe9ment-svg"},"Changer la couleur d'un \xe9l\xe9ment SVG"),(0,s.kt)("p",null,"Les barres sont dans la bonne position, mais elles sont toutes de la m\xeame couleur noire. SVG a un moyen de changer la couleur des barres."),(0,s.kt)("p",null,"En SVG, une forme rectiligne est color\xe9e avec l'attribut fill. Il prend en charge les codes hexad\xe9cimaux, les noms de couleurs et les valeurs RVB, ainsi que des options plus complexes telles que les d\xe9grad\xe9s et la transparence."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-html",metastring:"{21}","{21}":!0},'<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    const w = 500;\n    const h = 100;\n\n    const svg = d3.select("body")\n                  .append("svg")\n                  .attr("width", w)\n                  .attr("height", h);\n\n    svg.selectAll("rect")\n       .data(dataset)\n       .enter()\n       .append("rect")\n       .attr("x", (d, i) => i * 30)\n       .attr("y", (d, i) => h - 3 * d)\n       .attr("width", 25)\n       .attr("height", (d, i) => 3 * d)\n       .attr("fill", "navy"); \n  <\/script>\n</body>\n')),(0,s.kt)("h2",{id:"ajouter-des-\xe9tiquettes-aux-\xe9l\xe9ments-d3"},"Ajouter des \xe9tiquettes aux \xe9l\xe9ments D3"),(0,s.kt)("p",null,"D3 vous permet d'\xe9tiqueter un \xe9l\xe9ment de graphique, comme une barre, \xe0 l'aide de l'\xe9l\xe9ment de texte SVG."),(0,s.kt)("p",null,"Comme l'\xe9l\xe9ment rect, un \xe9l\xe9ment de texte doit avoir des attributs x et y, pour le placer sur le canevas SVG. Il doit \xe9galement acc\xe9der aux donn\xe9es pour afficher ces valeurs."),(0,s.kt)("p",null,"D3 vous donne un haut niveau de contr\xf4le sur la fa\xe7on dont vous \xe9tiquetez vos barres."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-html"},'<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    const w = 500;\n    const h = 100;\n\n    const svg = d3.select("body")\n                  .append("svg")\n                  .attr("width", w)\n                  .attr("height", h);\n\n    svg.selectAll("rect")\n       .data(dataset)\n       .enter()\n       .append("rect")\n       .attr("x", (d, i) => i * 30)\n       .attr("y", (d, i) => h - 3 * d)\n       .attr("width", 25)\n       .attr("height", (d, i) => 3 * d)\n       .attr("fill", "navy");\n\n    svg.selectAll("text")\n       .data(dataset)\n       .enter()\n       .append("text")\n       .attr("x", (d, i) => i * 30)\n       .attr("y", (d, i) => h - 3 * d - 3)\n       .text((d, i) => d);\n  <\/script>\n<body>\n')),(0,s.kt)("h2",{id:"\xe9tiquettes-de-style-d3"},"\xc9tiquettes de style D3"),(0,s.kt)("p",null,"Les m\xe9thodes D3 peuvent ajouter des styles aux \xe9tiquettes des barres. L'attribut fill d\xe9finit la couleur du texte pour un n\u0153ud de texte. La m\xe9thode ",(0,s.kt)("inlineCode",{parentName:"p"},"style()")," d\xe9finit des r\xe8gles CSS pour d'autres styles, tels que font-family ou font-size."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-html"},'<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    const w = 500;\n    const h = 100;\n\n    const svg = d3.select("body")\n                  .append("svg")\n                  .attr("width", w)\n                  .attr("height", h);\n\n    svg.selectAll("rect")\n       .data(dataset)\n       .enter()\n       .append("rect")\n       .attr("x", (d, i) => i * 30)\n       .attr("y", (d, i) => h - 3 * d)\n       .attr("width", 25)\n       .attr("height", (d, i) => d * 3)\n       .attr("fill", "navy");\n\n    svg.selectAll("text")\n       .data(dataset)\n       .enter()\n       .append("text")\n       .text((d) => d)\n       .attr("x", (d, i) => i * 30)\n       .attr("y", (d, i) => h - (3 * d) - 3)\n       .style("font-size", (dataset) => 25 + "px")\n       .style("fill", (dataset) => "red");\n  <\/script>\n</body>\n')),(0,s.kt)("h2",{id:"ajouter-un-effet-de-survol"},"Ajouter un effet de survol"),(0,s.kt)("p",null,"Il est possible d'ajouter des effets qui mettent en \xe9vidence une barre lorsque l'utilisateur la survole avec la souris. Jusqu'\xe0 pr\xe9sent, le style des rectangles est appliqu\xe9 avec les m\xe9thodes int\xe9gr\xe9es D3 et SVG, mais vous pouvez \xe9galement utiliser CSS."),(0,s.kt)("p",null,"Vous d\xe9finissez la classe CSS sur les \xe9l\xe9ments SVG avec la m\xe9thode ",(0,s.kt)("inlineCode",{parentName:"p"},"attr()"),". Ensuite, la pseudo-classe ",(0,s.kt)("inlineCode",{parentName:"p"},":hover")," de ta nouvelle classe contient les r\xe8gles de style pour tous les effets de survol."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-html"},'<style>\n  .bar:hover {\n    fill: brown;\n  }\n</style>\n<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    const w = 500;\n    const h = 100;\n\n    const svg = d3.select("body")\n                  .append("svg")\n                  .attr("width", w)\n                  .attr("height", h);\n\n    svg.selectAll("rect")\n       .data(dataset)\n       .enter()\n       .append("rect")\n       .attr("x", (d, i) => i * 30)\n       .attr("y", (d, i) => h - 3 * d)\n       .attr("width", 25)\n       .attr("height", (d, i) => 3 * d)\n       .attr("fill", "navy")\n       .attr("class", "bar");\n\n    svg.selectAll("text")\n       .data(dataset)\n       .enter()\n       .append("text")\n       .text((d) => d)\n       .attr("x", (d, i) => i * 30)\n       .attr("y", (d, i) => h - (3 * d) - 3);\n\n  <\/script>\n</body>\n')),(0,s.kt)("h2",{id:"cr\xe9er-un-nuage-de-points-avec-des-cercles-svg"},"Cr\xe9er un nuage de points avec des cercles SVG"),(0,s.kt)("p",null,"Un nuage de points est un autre type de visualisation. Il utilise g\xe9n\xe9ralement des cercles pour cartographier les points de donn\xe9es, qui ont chacun deux valeurs. Ces valeurs sont li\xe9es aux axes x et y et sont utilis\xe9es pour positionner le cercle dans la visualisation."),(0,s.kt)("p",null,"SVG a une \xe9tiquette de cercle pour cr\xe9er la forme du cercle. Cela fonctionne un peu comme les \xe9l\xe9ments rect que tu as utilis\xe9 pour le graphique \xe0 barres."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-html"},'<body>\n  <script>\n    const dataset = [\n                  [ 34,    78 ],\n                  [ 109,   280 ],\n                  [ 310,   120 ],\n                  [ 79,    411 ],\n                  [ 420,   220 ],\n                  [ 233,   145 ],\n                  [ 333,   96 ],\n                  [ 222,   333 ],\n                  [ 78,    320 ],\n                  [ 21,    123 ]\n                ];\n\n\n    const w = 500;\n    const h = 500;\n\n    const svg = d3.select("body")\n                  .append("svg")\n                  .attr("width", w)\n                  .attr("height", h);\n\n    svg.selectAll("circle")\n       .data(dataset)\n       .enter()\n       .append("circle")\n       .attr(\'r\', 5)\n       .attr(\'cx\',(d) => d[0])\n       .attr("cy", (d) => h - d[1])\n  <\/script>\n</body>\n')),(0,s.kt)("h2",{id:"ajouter-des-\xe9tiquettes-aux-cercles-de-nuage-de-points"},"Ajouter des \xe9tiquettes aux cercles de nuage de points"),(0,s.kt)("p",null,"Tu peux ajouter du texte pour cr\xe9er des \xe9tiquettes pour les points d'un nuage de points."),(0,s.kt)("p",null,"L'objectif est d'afficher les valeurs s\xe9par\xe9es par des virgules pour les premier (x) et deuxi\xe8me (y) champs de chaque \xe9l\xe9ment de l'ensemble de donn\xe9es."),(0,s.kt)("p",null,"Les n\u0153uds de texte ont besoin des attributs x et y pour le positionner sur le canevas SVG."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-html"},'<body>\n  <script>\n    const dataset = [\n                  [ 34,    78 ],\n                  [ 109,   280 ],\n                  [ 310,   120 ],\n                  [ 79,    411 ],\n                  [ 420,   220 ],\n                  [ 233,   145 ],\n                  [ 333,   96 ],\n                  [ 222,   333 ],\n                  [ 78,    320 ],\n                  [ 21,    123 ]\n                ];\n\n\n    const w = 500;\n    const h = 500;\n\n    const svg = d3.select("body")\n                  .append("svg")\n                  .attr("width", w)\n                  .attr("height", h);\n\n    svg.selectAll("circle")\n       .data(dataset)\n       .enter()\n       .append("circle")\n       .attr("cx", (d, i) => d[0])\n       .attr("cy", (d, i) => h - d[1])\n       .attr("r", 5);\n\n    svg.selectAll("text")\n       .data(dataset)\n       .enter()\n       .append("text")\n       .attr("x", (d) => d[0] +5)\n       .attr("y", (d) => h - d[1])\n       .text((d) => d[0]+ ", " + d[1]);\n  <\/script>\n</body>\n')),(0,s.kt)("h2",{id:"les-\xe9chelles"},"Les \xe9chelles"),(0,s.kt)("h3",{id:"cr\xe9er-une-\xe9chelle-lin\xe9aire"},"Cr\xe9er une \xe9chelle lin\xe9aire"),(0,s.kt)("p",null,"Les graphiques \xe0 barres et \xe0 nuage de points ont tous deux trac\xe9 des donn\xe9es directement sur le canevas SVG. Cependant, si la hauteur d'une barre ou de l'un des points de donn\xe9es \xe9tait sup\xe9rieure aux valeurs de hauteur ou de largeur SVG, elle sortirait de la zone SVG."),(0,s.kt)("p",null,"Dans D3, il y a des \xe9chelles pour aider \xe0 tracer les donn\xe9es. les \xe9chelles sont des fonctions qui indiquent au programme comment mapper un ensemble de points de donn\xe9es brutes sur les pixels du canevas SVG."),(0,s.kt)("p",null,"Par exemple, supposons que tu as un canevas SVG de 100 x 500 et que tu souhaites tracer le produit int\xe9rieur brut (PIB) pour un certain nombre de pays. L'ensemble des nombres serait de l'ordre du milliard ou du billion de dollars. Tu fournis \xe0 D3 un type d'\xe9chelle pour lui indiquer comment placer les grandes valeurs du PIB dans cette zone de 100x500."),(0,s.kt)("p",null,"Il est peu probable que tu traces des donn\xe9es brutes telles quelles. Avant de le tracer, tu d\xe9finisses l'\xe9chelle pour l'ensemble de ton ensemble de donn\xe9es, de sorte que les valeurs x et y correspondent \xe0 la largeur et \xe0 la hauteur de ta toile."),(0,s.kt)("p",null,"D3 a plusieurs types d'\xe9chelle. Pour une \xe9chelle lin\xe9aire (g\xe9n\xe9ralement utilis\xe9e avec des donn\xe9es quantitatives), il existe la m\xe9thode D3 scaleLinear()."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const scale = d3.scaleLinear()\n")),(0,s.kt)("p",null,"Par d\xe9faut, une \xe9chelle utilise la relation d'identit\xe9. La valeur de l'entr\xe9e est la m\xeame que la valeur de la sortie."),(0,s.kt)("h3",{id:"d\xe9finir-un-domaine-et-une-plage-sur-une-\xe9chelle"},"D\xe9finir un domaine et une plage sur une \xe9chelle"),(0,s.kt)("p",null,"Par d\xe9faut, les \xe9chelles utilisent la relation d'identit\xe9. Cela signifie que la valeur d'entr\xe9e correspond \xe0 la valeur de sortie. Cependant, les \xe9chelles peuvent \xeatre beaucoup plus flexibles et int\xe9ressantes."),(0,s.kt)("p",null,"Supposons qu'un ensemble de donn\xe9es ait des valeurs allant de 50 \xe0 480. Il s'agit des informations d'entr\xe9e pour une \xe9chelle, \xe9galement appel\xe9e domaine."),(0,s.kt)("p",null,"Tu souhaites mapper ces points le long de l'axe x sur le canevas SVG, entre 10 et 500 unit\xe9s. Il s'agit des informations de sortie, \xe9galement appel\xe9es plage."),(0,s.kt)("p",null,"Les m\xe9thodes ",(0,s.kt)("inlineCode",{parentName:"p"},"domain()")," et ",(0,s.kt)("inlineCode",{parentName:"p"},"range()")," d\xe9finissent ces valeurs pour l'\xe9chelle. Les deux m\xe9thodes prennent un tableau d'au moins deux \xe9l\xe9ments comme argument. Voici un exemple\xa0:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"scale.domain([50, 480]);\nscale.range([10, 500]);\nscale(50)\nscale(480)\nscale(325)\nscale(750)\nd3.scaleLinear()\n")),(0,s.kt)("p",null,"Dans l'ordre, les valeurs suivantes s'afficheraient dans la console\xa0: 10, 500, 323,37 et 807,67."),(0,s.kt)("p",null,"Notes que l'\xe9chelle utilise la relation lin\xe9aire entre les valeurs de domaine et de plage pour d\xe9terminer ce que la sortie devrait \xeatre pour un nombre donn\xe9. La valeur minimale dans le domaine (50) correspond \xe0 la valeur minimale (10) dans la plage."),(0,s.kt)("h3",{id:"utilises-les-fonctions-d3max-et-d3min-pour-rechercher-des-valeurs-minimales-et-maximales-dans-un-ensemble-de-donn\xe9es"},"Utilises les fonctions d3.max et d3.min pour rechercher des valeurs minimales et maximales dans un ensemble de donn\xe9es"),(0,s.kt)("p",null,"Les m\xe9thodes D3 ",(0,s.kt)("inlineCode",{parentName:"p"},"domain()")," et ",(0,s.kt)("inlineCode",{parentName:"p"},"range()")," d\xe9finissent ces informations pour ton \xe9chelle en fonction des donn\xe9es. Il existe plusieurs m\xe9thodes pour rendre cela plus facile."),(0,s.kt)("p",null,"Souvent, lorsque tu d\xe9finis le domaine, tu souhaites utiliser les valeurs minimales et maximales dans l'ensemble de donn\xe9es. Essayes de trouver ces valeurs manuellement, en particulier dans un grand ensemble de donn\xe9es, peut provoquer des erreurs."),(0,s.kt)("p",null,"D3 a deux m\xe9thodes - ",(0,s.kt)("inlineCode",{parentName:"p"},"min()")," et ",(0,s.kt)("inlineCode",{parentName:"p"},"max()")," pour renvoyer ces informations. Voici un exemple\xa0:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const exampleData = [34, 234, 73, 90, 6, 52];\nd3.min(exampleData)\nd3.max(exampleData)\n")),(0,s.kt)("p",null,"Un jeu de donn\xe9es peut avoir des tableaux imbriqu\xe9s, comme les paires de coordonn\xe9es ","[x, y]"," qui \xe9taient dans l'exemple de nuage de points. Dans ce cas, tu dois indiquer \xe0 D3 comment calculer le maximum et le minimum. Heureusement, les deux m\xe9thodes ",(0,s.kt)("inlineCode",{parentName:"p"},"min()")," et ",(0,s.kt)("inlineCode",{parentName:"p"},"max()")," acceptent une fonction callback. Dans cet exemple, l'argument ",(0,s.kt)("inlineCode",{parentName:"p"},"d")," de la fonction callback concerne le tableau interne actuel. Le callback doit renvoyer l'\xe9l\xe9ment du tableau interne (la valeur x ou y) sur lequel tu souhaites calculer le maximum ou le minimum. Voici un exemple pour savoir comment trouver les valeurs min et max avec un tableau de tableaux."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const locationData = [[1, 7],[6, 3],[8, 3]];\nconst minX = d3.min(locationData, (d) => d[0]);\n")),(0,s.kt)("p",null,"minX aurait la valeur 1."),(0,s.kt)("h3",{id:"utiliser-des-\xe9chelles-dynamiques"},"Utiliser des \xe9chelles dynamiques"),(0,s.kt)("p",null,"Les m\xe9thodes D3 ",(0,s.kt)("inlineCode",{parentName:"p"},"min()")," et ",(0,s.kt)("inlineCode",{parentName:"p"},"max()")," sont utiles pour aider \xe0 d\xe9finir l'\xe9chelle."),(0,s.kt)("p",null,"\xc9tant donn\xe9 un ensemble de donn\xe9es complexe, une priorit\xe9 est de d\xe9finir l'\xe9chelle de sorte que la visualisation s'adapte \xe0 la largeur et \xe0 la hauteur du conteneur SVG. Tu veux que toutes les donn\xe9es soient trac\xe9es \xe0 l'int\xe9rieur du canevas SVG afin qu'elles soient visibles sur la page Web."),(0,s.kt)("p",null,"L'exemple ci-dessous d\xe9finit l'\xe9chelle de l'axe des X pour les donn\xe9es du nuage de points. La m\xe9thode ",(0,s.kt)("inlineCode",{parentName:"p"},"domain()")," transmet des informations sur les valeurs de donn\xe9es brutes du trac\xe9. La m\xe9thode ",(0,s.kt)("inlineCode",{parentName:"p"},"range()")," lui donne des informations sur l'espace r\xe9el sur la page Web pour la visualisation."),(0,s.kt)("p",null,"Dans l'exemple, le domaine va de 0 au maximum dans l'ensemble. Il utilise la m\xe9thode ",(0,s.kt)("inlineCode",{parentName:"p"},"max()")," avec une fonction callback bas\xe9e sur les valeurs x dans les tableaux. La plage utilise la largeur (w) du canevas SVG, mais elle inclut \xe9galement un peu de remplissage. Cela place un espace entre les points du nuage de points et le bord du canevas SVG."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const dataset = [\n  [ 34,    78 ],\n  [ 109,   280 ],\n  [ 310,   120 ],\n  [ 79,    411 ],\n  [ 420,   220 ],\n  [ 233,   145 ],\n  [ 333,   96 ],\n  [ 222,   333 ],\n  [ 78,    320 ],\n  [ 21,    123 ]\n];\nconst w = 500;\nconst h = 500;\n\nconst padding = 30;\nconst xScale = d3.scaleLinear()\n  .domain([0, d3.max(dataset, (d) => d[0])])\n  .range([padding, w - padding]);\n")),(0,s.kt)("h3",{id:"utiliser-une-\xe9chelle-pr\xe9d\xe9finie-pour-placer-des-\xe9l\xe9ments"},"Utiliser une \xe9chelle pr\xe9d\xe9finie pour placer des \xe9l\xe9ments"),(0,s.kt)("p",null,"Une fois les \xe9chelles configur\xe9es, il est temps de cartographier \xe0 nouveau le nuage de points. Les \xe9chelles sont comme des fonctions de traitement qui transforment les donn\xe9es brutes ",(0,s.kt)("inlineCode",{parentName:"p"},"x")," et ",(0,s.kt)("inlineCode",{parentName:"p"},"y")," en valeurs qui s'adaptent et s'affichent correctement sur le canevas SVG. Ils conservent les donn\xe9es dans la zone de tra\xe7age de l'\xe9cran."),(0,s.kt)("p",null,"Tu d\xe9finis les valeurs d'attribut de coordonn\xe9es pour une forme SVG avec la fonction de mise \xe0 l'\xe9chelle. Cela inclut les attributs ",(0,s.kt)("inlineCode",{parentName:"p"},"x")," et ",(0,s.kt)("inlineCode",{parentName:"p"},"y")," pour les \xe9l\xe9ments ",(0,s.kt)("inlineCode",{parentName:"p"},"rect")," ou ",(0,s.kt)("inlineCode",{parentName:"p"},"text"),", ou ",(0,s.kt)("inlineCode",{parentName:"p"},"cx")," et ",(0,s.kt)("inlineCode",{parentName:"p"},"cy")," pour les ",(0,s.kt)("inlineCode",{parentName:"p"},"cercles"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'shape\n  .attr("x", (d) => xScale(d[0]))\n')),(0,s.kt)("p",null,"Les \xe9chelles d\xe9finissent les attributs de coordonn\xe9es de forme pour placer les points de donn\xe9es sur le canevas SVG. Tu n'as pas besoin d'appliquer des \xe9chelles lorsque tu affiches la valeur r\xe9elle des donn\xe9es, par exemple, dans la m\xe9thode ",(0,s.kt)("inlineCode",{parentName:"p"},"text()")," pour une info-bulle ou une \xe9tiquette."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-html"},'<body>\n  <script>\n    const dataset = [\n                  [ 34,     78 ],\n                  [ 109,   280 ],\n                  [ 310,   120 ],\n                  [ 79,   411 ],\n                  [ 420,   220 ],\n                  [ 233,   145 ],\n                  [ 333,   96 ],\n                  [ 222,    333 ],\n                  [ 78,    320 ],\n                  [ 21,   123 ]\n                ];\n\n    const w = 500;\n    const h = 500;\n    const padding = 60;\n\n    const xScale = d3.scaleLinear()\n                     .domain([0, d3.max(dataset, (d) => d[0])])\n                     .range([padding, w - padding]);\n\n    const yScale = d3.scaleLinear()\n                     .domain([0, d3.max(dataset, (d) => d[1])])\n                     .range([h - padding, padding]);\n\n    const svg = d3.select("body")\n                  .append("svg")\n                  .attr("width", w)\n                  .attr("height", h);\n\n    svg.selectAll("circle")\n       .data(dataset)\n       .enter()\n       .append("circle")\n       .attr("cx", (d) => xScale(d[0]))\n       .attr("cy", (d) => yScale(d[1]))\n       .attr(\'r\', 5);\n\n    svg.selectAll("text")\n       .data(dataset)\n       .enter()\n       .append("text")\n       .text((d) =>  (d[0] + ", "\n + d[1]))\n        .attr(\'r\', 5)\n        .attr("x", (d) => xScale(d[0] + 10))\n        .attr("y", (d) => yScale(d[1]));\n  <\/script>\n</body>\n')),(0,s.kt)("h2",{id:"ajouter-des-axes-\xe0-une-visualisation"},"Ajouter des axes \xe0 une visualisation"),(0,s.kt)("p",null,"Une autre fa\xe7on d'am\xe9liorer le nuage de points consiste \xe0 ajouter un axe ",(0,s.kt)("inlineCode",{parentName:"p"},"x")," et un axe ",(0,s.kt)("inlineCode",{parentName:"p"},"y"),"."),(0,s.kt)("p",null,"D3 a deux m\xe9thodes, ",(0,s.kt)("inlineCode",{parentName:"p"},"axisLeft()")," et ",(0,s.kt)("inlineCode",{parentName:"p"},"axisBottom()"),", pour restituer l'axe des ",(0,s.kt)("inlineCode",{parentName:"p"},"y")," et l'axe des ",(0,s.kt)("inlineCode",{parentName:"p"},"x"),", respectivement. Voici un exemple pour cr\xe9er l'axe ",(0,s.kt)("inlineCode",{parentName:"p"},"x")," bas\xe9 sur le ",(0,s.kt)("inlineCode",{parentName:"p"},"xScale")," dans les d\xe9fis pr\xe9c\xe9dents."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const xAxis = d3.axisBottom(xScale);\n")),(0,s.kt)("p",null,"L'\xe9tape suivante consiste \xe0 rendre l'axe sur le canevas SVG. Pour ce faire, vous pouvez utiliser un composant SVG g\xe9n\xe9ral, l'\xe9l\xe9ment ",(0,s.kt)("inlineCode",{parentName:"p"},"g"),". Le ",(0,s.kt)("inlineCode",{parentName:"p"},"g")," signifie groupe comme tu l'as vu plus haut. Contrairement au ",(0,s.kt)("inlineCode",{parentName:"p"},"rect"),", au ",(0,s.kt)("inlineCode",{parentName:"p"},"circle")," et au ",(0,s.kt)("inlineCode",{parentName:"p"},"text"),", un axe n'est qu'une ligne droite lorsqu'il est rendu. Parce que c'est une forme simple, l'utilisation de ",(0,s.kt)("inlineCode",{parentName:"p"},"g")," fonctionne. La derni\xe8re \xe9tape consiste \xe0 appliquer un attribut de transformation pour positionner l'axe sur le canevas SVG au bon endroit. Sinon, la ligne serait rendue le long de la bordure du canevas SVG et ne serait pas visible. SVG prend en charge diff\xe9rents types de ",(0,s.kt)("inlineCode",{parentName:"p"},"transforms"),", mais le positionnement d'un axe n\xe9cessite un ",(0,s.kt)("inlineCode",{parentName:"p"},"translate"),". Lorsqu'il est appliqu\xe9 \xe0 l'\xe9l\xe9ment ",(0,s.kt)("inlineCode",{parentName:"p"},"g"),", il d\xe9place tout le groupe de haut en bas."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'const xAxis = d3.axisBottom(xScale);\n\nsvg.append("g")\n   .attr("transform", "translate(0, " + (h - padding) + ")")\n   .call(xAxis);\n')),(0,s.kt)("p",null,"Le code ci-dessus place l'axe des ",(0,s.kt)("inlineCode",{parentName:"p"},"x")," en bas du canevas SVG. Ensuite, il est pass\xe9 en argument \xe0 la m\xe9thode ",(0,s.kt)("inlineCode",{parentName:"p"},"call()"),". L'axe des ",(0,s.kt)("inlineCode",{parentName:"p"},"y")," fonctionne de la m\xeame mani\xe8re, sauf que l'argument  ",(0,s.kt)("inlineCode",{parentName:"p"},"translate")," est sous la forme ",(0,s.kt)("inlineCode",{parentName:"p"},"(x, 0)"),". Parce que ",(0,s.kt)("inlineCode",{parentName:"p"},"translate")," est une cha\xeene dans la m\xe9thode ",(0,s.kt)("inlineCode",{parentName:"p"},"attr()")," ci-dessus, tu peux utiliser la concat\xe9nation pour inclure des valeurs de variable pour ses arguments."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-html"},'<body>\n  <script>\n    const dataset = [\n                  [ 34,     78 ],\n                  [ 109,   280 ],\n                  [ 310,   120 ],\n                  [ 79,   411 ],\n                  [ 420,   220 ],\n                  [ 233,   145 ],\n                  [ 333,   96 ],\n                  [ 222,    333 ],\n                  [ 78,    320 ],\n                  [ 21,   123 ]\n                ];\n\n    const w = 500;\n    const h = 500;\n    const padding = 60;\n\n    const xScale = d3.scaleLinear()\n                     .domain([0, d3.max(dataset, (d) => d[0])])\n                     .range([padding, w - padding]);\n\n    const yScale = d3.scaleLinear()\n                     .domain([0, d3.max(dataset, (d) => d[1])])\n                     .range([h - padding, padding]);\n\n    const svg = d3.select("body")\n                  .append("svg")\n                  .attr("width", w)\n                  .attr("height", h);\n\n    svg.selectAll("circle")\n       .data(dataset)\n       .enter()\n       .append("circle")\n       .attr("cx", (d) => xScale(d[0]))\n       .attr("cy",(d) => yScale(d[1]))\n       .attr("r", (d) => 5);\n\n    svg.selectAll("text")\n       .data(dataset)\n       .enter()\n       .append("text")\n       .text((d) =>  (d[0] + "," + d[1]))\n       .attr("x", (d) => xScale(d[0] + 10))\n       .attr("y", (d) => yScale(d[1]))\n\n    const xAxis = d3.axisBottom(xScale);\n    // Add your code below this line\n    const yAxis = d3.axisLeft(yScale);\n    // Add your code above this line\n\n    svg.append("g")\n       .attr("transform", "translate(0," + (h - padding) + ")")\n       .call(xAxis);\n\n    // Add your code below this line\n    svg.append("g")\n    .attr("transform", "translate(" + padding + ",0)")\n   .call(yAxis);\n  <\/script>\n</body>\n')))}c.isMDXComponent=!0}}]);